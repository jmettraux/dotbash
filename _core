
export PATH=$PATH:/sbin:~/bin:bin
export EDITOR=vim

if [ "$TERM" = "xterm" ]; then
  TERM="xterm-256color"
fi

export HISTCONTROL=ignoreboth
  # which comprises `ignoredups` and `ignorespaces`


#
# grep

export GREP_OPTIONS='--color=auto'

alias gr='grep -R -n --exclude-dir=.git'

function gg() {
  if [ $# -eq 1 ]; then
    grep -R -n --exclude-dir=.git -E "$@" .
  else
    grep -R -n --exclude-dir=.git -E "$@"
  fi
}

#export LANG=en_US.UTF-8
#export LC_CTYPE=en_US.UTF-8


#
# ls

if [[ -x `which dircolors` ]]; then
  eval `dircolors` # for "tree"
fi
export CLICOLOR=1 # OSX

# http://geoff.greer.fm/2008/06/27/lscolorsls_colors-now-with-linux-support/
#
#if [ `uname` == 'Linux' ]; then
#  LS_COLORS="di=34;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:"
#  export LS_COLORS
#elif [ `uname` == 'Darwin' ]; then
#  LSCOLORS="exfxcxdxbxegedabagacad"
#  export LSCOLORS
#fi

_LSCOL=''
if [ `uname` == 'Linux' ]; then
  #_LSCOL='--color'
  _LSCOL='--color=auto'
elif [ `uname` == 'Darwin' ]; then
  _LSCOL='-G'
fi

alias ll="ls -al ${_LSCOL}"
alias lh="ls -alh ${_LSCOL}"
alias llh="ls -alh ${_LSCOL}"
alias la="ls -A ${_LSCOL}"
alias l="ls -CF ${_LSCOL}"
alias t='tree -C'
alias th='tree -Ch'


#
# aliases


#alias gu='git status'
alias giu='git status'
#alias gd='git diff'
alias gid='git diff'
#alias gds='git diff --stat'
alias gids='git diff --stat'
alias gdw='git diff --word-diff'
alias gdp='git diff --patience'
alias gis='git show'
alias giss='git show --stat'
#alias gl='git log --graph --oneline --abbrev-commit --decorate'
alias gil='git log --graph --oneline --abbrev-commit --decorate'
alias glb='git log --graph --oneline --abbrev-commit --decorate --branches'
alias gilb='git log --graph --oneline --abbrev-commit --decorate --branches'
alias gic='git shortlog -s -n'
alias gad='git add'
alias gadd='git add'

alias b='bat'

#alias map="ak \"(\bmodule .|\bclass .|\bdef .|\bprotected)\" "

if [ `uname` == 'Darwin' ]; then
  alias eject='diskutil unmount'
fi

alias pc='qpdf --check'

function pcc() {
  vim -c 'execute "silent !echo " . &fileencoding | q' $1
  qpdf --check $1
}

function pv() {
  if [ $# -eq 0 ]; then
    FN0='README.md'
  else
    FN0=$1
  fi
  FN1=`basename $FN0 '.md' | awk '{ print tolower($0) }'`.html
  pandoc $FN0 > $FN1 && open $FN1
}


#
# dotgrade

function dotsource() {

  echo "source ~/.bash/bashrc"
  source ~/.bash/bashrc
}

function dotgrade() {

  odir=`pwd`

  echo
  echo ".vim   v========================================================================"
  cd ~/.vim && \
    git pull --verbose && \
    git log --graph --oneline --abbrev-commit --decorate -1

  echo
  echo ".bash  v========================================================================"
  cd ~/.bash && \
    git pull --verbose && \
    git log --graph --oneline --abbrev-commit --decorate -1
  dotsource

  echo
  cd $odir
}

function dottus() {

  odir=`pwd`

  echo
  echo ".vim   .========================================================================"
  cd ~/.vim && git status

  echo
  echo ".bash  .========================================================================"
  cd ~/.bash && git status

  echo
  cd $odir
}

#
# over

set -o ignoreeof
  # prevent exit on <C-d>

# vim: set ft=sh:

